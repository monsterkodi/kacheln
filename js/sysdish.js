// koffee 1.14.0

/*
 0000000  000   000   0000000  0000000    000   0000000  000   000  
000        000 000   000       000   000  000  000       000   000  
0000000     00000    0000000   000   000  000  0000000   000000000  
     000     000          000  000   000  000       000  000   000  
0000000      000     0000000   0000000    000  0000000   000   000
 */
var Kachel, Sysdish, clamp, deg2rad, post, ref, utils,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

ref = require('kxk'), clamp = ref.clamp, deg2rad = ref.deg2rad, post = ref.post;

utils = require('./utils');

Kachel = require('./kachel');

Sysdish = (function(superClass) {
    extend(Sysdish, superClass);

    function Sysdish(kachelId) {
        this.kachelId = kachelId != null ? kachelId : 'sysdish';
        this.animDish = bind(this.animDish, this);
        this.onData = bind(this.onData, this);
        this.onLeftClick = bind(this.onLeftClick, this);
        this.onRightClick = bind(this.onRightClick, this);
        Sysdish.__super__.constructor.call(this, this.kachelId);
        this.animCount = 0;
        this.colors = {
            dsk: [[128, 128, 255], [64, 64, 255]],
            net: [[0, 150, 0], [0, 255, 0]],
            cpu: [[255, 255, 0], [255, 100, 0]]
        };
        this.tops = {
            net: '0%',
            dsk: '33%',
            cpu: '66%'
        };
        post.on('sysinfo', this.onData);
        this.initDish();
    }

    Sysdish.prototype.onRightClick = function() {
        return this.onLeftClick();
    };

    Sysdish.prototype.onLeftClick = function() {};

    Sysdish.prototype.onData = function(data) {
        this.data = data;
        this.drawDish();
        return this.animDish();
    };

    Sysdish.prototype.animDish = function() {
        var pie180, pie360;
        clearTimeout(this.animTimer);
        if (!this.data) {
            return;
        }
        this.animCount += 1;
        if (this.animCount <= 30) {
            pie180 = function(pie, radius, angle, start) {
                var ex, ey, sx, sy;
                if (start == null) {
                    start = 0;
                }
                angle = clamp(0, 180, angle);
                sx = radius * Math.sin(deg2rad(start + angle));
                sy = -radius * Math.cos(deg2rad(start + angle));
                ex = radius * Math.sin(deg2rad(start));
                ey = -radius * Math.cos(deg2rad(start));
                return pie.setAttribute('d', "M 0 0 L " + sx + " " + sy + " A " + radius + " " + radius + " " + start + " 0 0 " + ex + " " + ey + " z");
            };
            pie360 = function(pie, radius, angle) {
                var ex, ey, f, sx, sy;
                angle = clamp(0, 359, angle);
                sx = radius * Math.sin(deg2rad(angle));
                sy = -radius * Math.cos(deg2rad(angle));
                ex = 0;
                ey = -radius;
                f = angle <= 180 && '0 0' || '1 0';
                return pie.setAttribute('d', "M 0 0 L " + sx + " " + sy + " A " + radius + " " + radius + " 0 " + f + " " + ex + " " + ey + " z");
            };
            if (this.data.dsk != null) {
                this.dskrNow += (this.dskrNew - this.dskrOld) / 30;
                this.dskwNow += (this.dskwNew - this.dskwOld) / 30;
                pie180(this.dskrPie, 45, this.dskrNow);
                pie180(this.dskwPie, 45, this.dskwNow, 180);
            }
            this.netrNow += (this.netrNew - this.netrOld) / 30;
            this.nettNow += (this.nettNew - this.nettOld) / 30;
            pie180(this.netrPie, 45, this.netrNow);
            pie180(this.nettPie, 45, this.nettNow, 180);
            this.sysNow += (this.sysNew - this.sysOld) / 30;
            this.usrNow += (this.usrNew - this.usrOld) / 30;
            pie360(this.usrPie, 40, this.usrNow);
            pie360(this.sysPie, 40, this.sysNow);
            this.memuNow += (this.memuNew - this.memuOld) / 30;
            this.memaNow += (this.memaNew - this.memaOld) / 30;
            pie360(this.memuPie, 18, this.memuNow);
            pie360(this.memaPie, 18, this.memaNow);
        }
        return this.animTimer = setTimeout(this.animDish, parseInt(10000 / 30));
    };

    Sysdish.prototype.initDish = function() {
        var pie, svg;
        this.div.innerHTML = '';
        svg = utils.svg({
            clss: 'dish'
        });
        this.div.appendChild(svg);
        pie = utils.circle({
            radius: 45,
            clss: 'sysdish_disk_bgr',
            svg: svg
        });
        this.dskrPie = utils.pie({
            svg: svg,
            radius: 40,
            clss: 'sysdish_disk_read',
            angle: 0
        });
        this.dskwPie = utils.pie({
            svg: svg,
            radius: 40,
            clss: 'sysdish_disk_write',
            angle: 0,
            start: 180
        });
        this.netrPie = utils.pie({
            svg: svg,
            radius: 40,
            clss: 'sysdish_net_recv',
            angle: 0
        });
        this.nettPie = utils.pie({
            svg: svg,
            radius: 40,
            clss: 'sysdish_net_send',
            angle: 0,
            start: 180
        });
        pie = utils.circle({
            radius: 40,
            clss: 'sysdish_load_bgr',
            svg: svg
        });
        this.sysPie = utils.pie({
            svg: pie,
            radius: 40,
            clss: 'sysdish_load_sys',
            angle: 0
        });
        this.usrPie = utils.pie({
            svg: pie,
            radius: 40,
            clss: 'sysdish_load_usr',
            angle: 0
        });
        this.memuPie = utils.pie({
            svg: svg,
            radius: 40,
            clss: 'sysdish_mem_used',
            angle: 0
        });
        return this.memaPie = utils.pie({
            svg: svg,
            radius: 40,
            clss: 'sysdish_mem_active',
            angle: 0
        });
    };

    Sysdish.prototype.drawDish = function() {
        if (!this.data) {
            return;
        }
        clearTimeout(this.animTimer);
        this.animCount = 0;
        if (this.data.dsk != null) {
            this.dskrOld = this.dskrNow = this.dskrNew;
            this.dskwOld = this.dskwNow = this.dskwNew;
            this.dskrNew = 180 * this.data.dsk.r_sec / this.data.dsk.r_max;
            this.dskwNew = 180 * this.data.dsk.w_sec / this.data.dsk.w_max;
        }
        this.netrOld = this.netrNow = this.netrNew;
        this.nettOld = this.nettNow = this.nettNew;
        this.netrNew = 180 * this.data.net.rx_sec / this.data.net.rx_max;
        this.nettNew = 180 * this.data.net.tx_sec / this.data.net.tx_max;
        this.sysOld = this.sysNow = this.sysNew;
        this.usrOld = this.usrNow = this.usrNew;
        this.sysNew = 360 * this.data.cpu.sys;
        this.usrNew = 360 * this.data.cpu.usr;
        this.memuOld = this.memuNow = this.memuNew;
        this.memaOld = this.memaNow = this.memaNew;
        this.memuNew = 360 * this.data.mem.used / this.data.mem.total;
        return this.memaNew = 360 * this.data.mem.active / this.data.mem.total;
    };

    return Sysdish;

})(Kachel);

module.exports = Sysdish;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/sysdish.coffee